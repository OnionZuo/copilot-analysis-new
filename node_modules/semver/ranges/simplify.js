var require_simplify = __commonJSMin((exports, module) => {
  var satisfies = ZQ(),
    compare = Ep();
  module.exports = (versions, range, options) => {
    let set = [],
      first = null,
      prev = null,
      v = versions.sort((a, b) => compare(a, b, options));
    for (let version of v) satisfies(version, range, options) ? (prev = version, first || (first = version)) : (prev && set.push([first, prev]), prev = null, first = null);
    first && set.push([first, null]);
    let ranges = [];
    for (let [min, max] of set) min === max ? ranges.push(min) : !max && min === v[0] ? ranges.push("*") : max ? min === v[0] ? ranges.push(`<=${max}`) : ranges.push(`${min} - ${max}`) : ranges.push(`>=${min}`);
    let simplified = ranges.join(" || "),
      original = typeof range.raw == "string" ? range.raw : String(range);
    return simplified.length < original.length ? simplified : range;
  };
});