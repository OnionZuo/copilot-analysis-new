var require_job = __commonJSMin(exports => {
  "use strict";

  var __importDefault = exports && exports.__importDefault || function (mod) {
    return mod && mod.__esModule ? mod : {
      default: mod
    };
  };
  Object.defineProperty(exports, "__esModule", {
    value: !0
  });
  var worker_pool_1 = __importDefault(M$e()),
    MISSING_HANDLER_ERROR = `job needs a function.
Try with:
> job(() => {...}, config)`,
    WRONG_CONTEXT_ERROR = `job needs an object as ctx.
Try with:
> job(() => {...}, {ctx: {...}})`;
  function job(handler, config = {
    ctx: {},
    data: {}
  }) {
    return new Promise((resolve, reject) => {
      if (typeof handler != "function") return reject(new Error(MISSING_HANDLER_ERROR));
      if (config.ctx = config.ctx || {}, config.data = config.data || {}, typeof config.ctx != "object") return reject(new Error(WRONG_CONTEXT_ERROR));
      worker_pool_1.default.enqueue({
        handler: handler,
        config: config,
        resolve: resolve,
        reject: reject
      });
    });
  }
  __name(job, "job");
  exports.job = job;
  exports.stop = worker_pool_1.default.teardown.bind(worker_pool_1.default);
  exports.start = worker_pool_1.default.setup.bind(worker_pool_1.default);
});