var _TypeDereferenceError = class _TypeDereferenceError extends TypeBoxError {
  constructor(schema) {
    super(`Unable to dereference schema with $id '${schema.$ref}'`), this.schema = schema;
  }
};,__name(_TypeDereferenceError, "TypeDereferenceError");,var TypeDereferenceError = _TypeDereferenceError;,function Resolve(schema, references) {
  let target = references.find(target => target.$id === schema.$ref);
  if (target === void 0) throw new TypeDereferenceError(schema);
  return Deref(target, references);
},__name(Resolve, "Resolve");,function Pushref(schema, references) {
  return !IsString(schema.$id) || references.some(target => target.$id === schema.$id) || references.push(schema), references;
},__name(Pushref, "Pushref");,function Deref(schema, references) {
  return schema[Kind] === "This" || schema[Kind] === "Ref" ? Resolve(schema, references) : schema;
},__name(Deref, "Deref");