function ExtractRest(L, R) {
  let extracted = L.filter(inner => ExtendsCheck(inner, R) !== ExtendsResult.False);
  return extracted.length === 1 ? extracted[0] : Union(extracted);
},__name(ExtractRest, "ExtractRest");,function Extract(L, R, options) {
  return IsTemplateLiteral(L) ? CreateType(ExtractFromTemplateLiteral(L, R), options) : IsMappedResult(L) ? CreateType(ExtractFromMappedResult(L, R), options) : CreateType(IsUnion(L) ? ExtractRest(L.anyOf, R) : ExtendsCheck(L, R) !== ExtendsResult.False ? L : Never(), options);
},__name(Extract, "Extract");