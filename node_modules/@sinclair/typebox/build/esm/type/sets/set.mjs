function SetIncludes(T, S) {
  return T.includes(S);
},__name(SetIncludes, "SetIncludes");,function SetDistinct(T) {
  return [...new Set(T)];
},__name(SetDistinct, "SetDistinct");,function SetIntersect(T, S) {
  return T.filter(L => S.includes(L));
},__name(SetIntersect, "SetIntersect");,function SetIntersectManyResolve(T, Init) {
  return T.reduce((Acc, L) => SetIntersect(Acc, L), Init);
},__name(SetIntersectManyResolve, "SetIntersectManyResolve");,function SetIntersectMany(T) {
  return T.length === 1 ? T[0] : T.length > 1 ? SetIntersectManyResolve(T.slice(1), T[0]) : [];
},__name(SetIntersectMany, "SetIntersectMany");,function SetUnionMany(T) {
  let Acc = [];
  for (let L of T) Acc.push(...L);
  return Acc;
},__name(SetUnionMany, "SetUnionMany");