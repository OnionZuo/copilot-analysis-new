function FromComputed(target, parameters) {
  return Computed("Awaited", [Computed(target, parameters)]);
},__name(FromComputed, "FromComputed");,function FromRef($ref) {
  return Computed("Awaited", [Ref($ref)]);
},__name(FromRef, "FromRef");,function FromIntersect(types) {
  return Intersect(FromRest(types));
},__name(FromIntersect, "FromIntersect");,function FromUnion(types) {
  return Union(FromRest(types));
},__name(FromUnion, "FromUnion");,function FromPromise(type) {
  return Awaited(type);
},__name(FromPromise, "FromPromise");,function FromRest(types) {
  return types.map(type => Awaited(type));
},__name(FromRest, "FromRest");,function Awaited(type, options) {
  return CreateType(IsComputed(type) ? FromComputed(type.target, type.parameters) : IsIntersect(type) ? FromIntersect(type.allOf) : IsUnion(type) ? FromUnion(type.anyOf) : IsPromise(type) ? FromPromise(type.item) : IsRef(type) ? FromRef(type.$ref) : type, options);
},__name(Awaited, "Awaited");