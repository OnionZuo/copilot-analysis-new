function FromPropertyKey(K, U, L, R, options) {
  return {
    [K]: Extends(Literal(K), U, L, R, Clone(options))
  };
},__name(FromPropertyKey, "FromPropertyKey");,function FromPropertyKeys(K, U, L, R, options) {
  return K.reduce((Acc, LK) => ({
    ...Acc,
    ...FromPropertyKey(LK, U, L, R, options)
  }), {});
},__name(FromPropertyKeys, "FromPropertyKeys");,function FromMappedKey(K, U, L, R, options) {
  return FromPropertyKeys(K.keys, U, L, R, options);
},__name(FromMappedKey, "FromMappedKey");,function ExtendsFromMappedKey(T, U, L, R, options) {
  let P = FromMappedKey(T, U, L, R, options);
  return MappedResult(P);
},__name(ExtendsFromMappedKey, "ExtendsFromMappedKey");