function FromTemplateLiteral(templateLiteral) {
  return TemplateLiteralGenerate(templateLiteral).map(key => key.toString());
},__name(FromTemplateLiteral, "FromTemplateLiteral");,function FromUnion(types) {
  let result = [];
  for (let type of types) result.push(...IndexPropertyKeys(type));
  return result;
},__name(FromUnion, "FromUnion");,function FromLiteral(literalValue) {
  return [literalValue.toString()];
},__name(FromLiteral, "FromLiteral");,function IndexPropertyKeys(type) {
  return [...new Set(IsTemplateLiteral(type) ? FromTemplateLiteral(type) : IsUnion(type) ? FromUnion(type.anyOf) : IsLiteral(type) ? FromLiteral(type.const) : IsNumber(type) ? ["[number]"] : IsInteger(type) ? ["[number]"] : [])];
},__name(IndexPropertyKeys, "IndexPropertyKeys");