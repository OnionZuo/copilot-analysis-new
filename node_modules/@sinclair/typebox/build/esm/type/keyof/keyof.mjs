function FromComputed(target, parameters) {
  return Computed("KeyOf", [Computed(target, parameters)]);
},__name(FromComputed, "FromComputed");,function FromRef($ref) {
  return Computed("KeyOf", [Ref($ref)]);
},__name(FromRef, "FromRef");,function KeyOfFromType(type, options) {
  let propertyKeys = KeyOfPropertyKeys(type),
    propertyKeyTypes = KeyOfPropertyKeysToRest(propertyKeys),
    result = UnionEvaluated(propertyKeyTypes);
  return CreateType(result, options);
},__name(KeyOfFromType, "KeyOfFromType");,function KeyOfPropertyKeysToRest(propertyKeys) {
  return propertyKeys.map(L => L === "[number]" ? Number() : Literal(L));
},__name(KeyOfPropertyKeysToRest, "KeyOfPropertyKeysToRest");,function KeyOf(type, options) {
  return IsComputed(type) ? FromComputed(type.target, type.parameters) : IsRef(type) ? FromRef(type.$ref) : IsMappedResult(type) ? KeyOfFromMappedResult(type, options) : KeyOfFromType(type, options);
},__name(KeyOf, "KeyOf");