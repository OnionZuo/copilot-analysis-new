var require_protocol_fileOperations = __commonJSMin(exports => {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: !0
  });
  exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;
  var messages_1 = mo(),
    FileOperationPatternKind;
  (function (FileOperationPatternKind) {
    FileOperationPatternKind.file = "file", FileOperationPatternKind.folder = "folder";
  })(FileOperationPatternKind || (exports.FileOperationPatternKind = FileOperationPatternKind = {}));
  var WillCreateFilesRequest;
  (function (WillCreateFilesRequest) {
    WillCreateFilesRequest.method = "workspace/willCreateFiles", WillCreateFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer, WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);
  })(WillCreateFilesRequest || (exports.WillCreateFilesRequest = WillCreateFilesRequest = {}));
  var DidCreateFilesNotification;
  (function (DidCreateFilesNotification) {
    DidCreateFilesNotification.method = "workspace/didCreateFiles", DidCreateFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);
  })(DidCreateFilesNotification || (exports.DidCreateFilesNotification = DidCreateFilesNotification = {}));
  var WillRenameFilesRequest;
  (function (WillRenameFilesRequest) {
    WillRenameFilesRequest.method = "workspace/willRenameFiles", WillRenameFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer, WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);
  })(WillRenameFilesRequest || (exports.WillRenameFilesRequest = WillRenameFilesRequest = {}));
  var DidRenameFilesNotification;
  (function (DidRenameFilesNotification) {
    DidRenameFilesNotification.method = "workspace/didRenameFiles", DidRenameFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);
  })(DidRenameFilesNotification || (exports.DidRenameFilesNotification = DidRenameFilesNotification = {}));
  var DidDeleteFilesNotification;
  (function (DidDeleteFilesNotification) {
    DidDeleteFilesNotification.method = "workspace/didDeleteFiles", DidDeleteFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);
  })(DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = DidDeleteFilesNotification = {}));
  var WillDeleteFilesRequest;
  (function (WillDeleteFilesRequest) {
    WillDeleteFilesRequest.method = "workspace/willDeleteFiles", WillDeleteFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer, WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);
  })(WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = WillDeleteFilesRequest = {}));
});