var require_protocol = __commonJSMin(exports => {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: !0
  });
  exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.RelativePattern = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeErrorCodes = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.PositionEncodingKind = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.NotebookCellTextDocumentFilter = exports.NotebookDocumentFilter = exports.TextDocumentFilter = void 0;
  exports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangesFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = exports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolResolveRequest = void 0;
  exports.InlineCompletionRequest = exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = exports.InlineValueRefreshRequest = exports.InlineValueRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchySubtypesRequest = exports.TypeHierarchyPrepareRequest = void 0;
  var messages_1 = mo(),
    vscode_languageserver_types_1 = PL(),
    Is = ML(),
    protocol_implementation_1 = HQe();
  Object.defineProperty(exports, "ImplementationRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_implementation_1.ImplementationRequest;
    }, "get")
  });
  var protocol_typeDefinition_1 = KQe();
  Object.defineProperty(exports, "TypeDefinitionRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_typeDefinition_1.TypeDefinitionRequest;
    }, "get")
  });
  var protocol_workspaceFolder_1 = XQe();
  Object.defineProperty(exports, "WorkspaceFoldersRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_workspaceFolder_1.WorkspaceFoldersRequest;
    }, "get")
  });
  Object.defineProperty(exports, "DidChangeWorkspaceFoldersNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_workspaceFolder_1.DidChangeWorkspaceFoldersNotification;
    }, "get")
  });
  var protocol_configuration_1 = n2e();
  Object.defineProperty(exports, "ConfigurationRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_configuration_1.ConfigurationRequest;
    }, "get")
  });
  var protocol_colorProvider_1 = r2e();
  Object.defineProperty(exports, "DocumentColorRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_colorProvider_1.DocumentColorRequest;
    }, "get")
  });
  Object.defineProperty(exports, "ColorPresentationRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_colorProvider_1.ColorPresentationRequest;
    }, "get")
  });
  var protocol_foldingRange_1 = c2e();
  Object.defineProperty(exports, "FoldingRangeRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_foldingRange_1.FoldingRangeRequest;
    }, "get")
  });
  Object.defineProperty(exports, "FoldingRangeRefreshRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_foldingRange_1.FoldingRangeRefreshRequest;
    }, "get")
  });
  var protocol_declaration_1 = u2e();
  Object.defineProperty(exports, "DeclarationRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_declaration_1.DeclarationRequest;
    }, "get")
  });
  var protocol_selectionRange_1 = d2e();
  Object.defineProperty(exports, "SelectionRangeRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_selectionRange_1.SelectionRangeRequest;
    }, "get")
  });
  var protocol_progress_1 = b2e();
  Object.defineProperty(exports, "WorkDoneProgress", {
    enumerable: !0,
    get: __name(function () {
      return protocol_progress_1.WorkDoneProgress;
    }, "get")
  });
  Object.defineProperty(exports, "WorkDoneProgressCreateRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_progress_1.WorkDoneProgressCreateRequest;
    }, "get")
  });
  Object.defineProperty(exports, "WorkDoneProgressCancelNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_progress_1.WorkDoneProgressCancelNotification;
    }, "get")
  });
  var protocol_callHierarchy_1 = _2e();
  Object.defineProperty(exports, "CallHierarchyIncomingCallsRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest;
    }, "get")
  });
  Object.defineProperty(exports, "CallHierarchyOutgoingCallsRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest;
    }, "get")
  });
  Object.defineProperty(exports, "CallHierarchyPrepareRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_callHierarchy_1.CallHierarchyPrepareRequest;
    }, "get")
  });
  var protocol_semanticTokens_1 = I2e();
  Object.defineProperty(exports, "TokenFormat", {
    enumerable: !0,
    get: __name(function () {
      return protocol_semanticTokens_1.TokenFormat;
    }, "get")
  });
  Object.defineProperty(exports, "SemanticTokensRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_semanticTokens_1.SemanticTokensRequest;
    }, "get")
  });
  Object.defineProperty(exports, "SemanticTokensDeltaRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_semanticTokens_1.SemanticTokensDeltaRequest;
    }, "get")
  });
  Object.defineProperty(exports, "SemanticTokensRangeRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_semanticTokens_1.SemanticTokensRangeRequest;
    }, "get")
  });
  Object.defineProperty(exports, "SemanticTokensRefreshRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_semanticTokens_1.SemanticTokensRefreshRequest;
    }, "get")
  });
  Object.defineProperty(exports, "SemanticTokensRegistrationType", {
    enumerable: !0,
    get: __name(function () {
      return protocol_semanticTokens_1.SemanticTokensRegistrationType;
    }, "get")
  });
  var protocol_showDocument_1 = S2e();
  Object.defineProperty(exports, "ShowDocumentRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_showDocument_1.ShowDocumentRequest;
    }, "get")
  });
  var protocol_linkedEditingRange_1 = N2e();
  Object.defineProperty(exports, "LinkedEditingRangeRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_linkedEditingRange_1.LinkedEditingRangeRequest;
    }, "get")
  });
  var protocol_fileOperations_1 = j2e();
  Object.defineProperty(exports, "FileOperationPatternKind", {
    enumerable: !0,
    get: __name(function () {
      return protocol_fileOperations_1.FileOperationPatternKind;
    }, "get")
  });
  Object.defineProperty(exports, "DidCreateFilesNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_fileOperations_1.DidCreateFilesNotification;
    }, "get")
  });
  Object.defineProperty(exports, "WillCreateFilesRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_fileOperations_1.WillCreateFilesRequest;
    }, "get")
  });
  Object.defineProperty(exports, "DidRenameFilesNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_fileOperations_1.DidRenameFilesNotification;
    }, "get")
  });
  Object.defineProperty(exports, "WillRenameFilesRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_fileOperations_1.WillRenameFilesRequest;
    }, "get")
  });
  Object.defineProperty(exports, "DidDeleteFilesNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_fileOperations_1.DidDeleteFilesNotification;
    }, "get")
  });
  Object.defineProperty(exports, "WillDeleteFilesRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_fileOperations_1.WillDeleteFilesRequest;
    }, "get")
  });
  var protocol_moniker_1 = H2e();
  Object.defineProperty(exports, "UniquenessLevel", {
    enumerable: !0,
    get: __name(function () {
      return protocol_moniker_1.UniquenessLevel;
    }, "get")
  });
  Object.defineProperty(exports, "MonikerKind", {
    enumerable: !0,
    get: __name(function () {
      return protocol_moniker_1.MonikerKind;
    }, "get")
  });
  Object.defineProperty(exports, "MonikerRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_moniker_1.MonikerRequest;
    }, "get")
  });
  var protocol_typeHierarchy_1 = J2e();
  Object.defineProperty(exports, "TypeHierarchyPrepareRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_typeHierarchy_1.TypeHierarchyPrepareRequest;
    }, "get")
  });
  Object.defineProperty(exports, "TypeHierarchySubtypesRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_typeHierarchy_1.TypeHierarchySubtypesRequest;
    }, "get")
  });
  Object.defineProperty(exports, "TypeHierarchySupertypesRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_typeHierarchy_1.TypeHierarchySupertypesRequest;
    }, "get")
  });
  var protocol_inlineValue_1 = eDe();
  Object.defineProperty(exports, "InlineValueRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_inlineValue_1.InlineValueRequest;
    }, "get")
  });
  Object.defineProperty(exports, "InlineValueRefreshRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_inlineValue_1.InlineValueRefreshRequest;
    }, "get")
  });
  var protocol_inlayHint_1 = iDe();
  Object.defineProperty(exports, "InlayHintRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_inlayHint_1.InlayHintRequest;
    }, "get")
  });
  Object.defineProperty(exports, "InlayHintResolveRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_inlayHint_1.InlayHintResolveRequest;
    }, "get")
  });
  Object.defineProperty(exports, "InlayHintRefreshRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_inlayHint_1.InlayHintRefreshRequest;
    }, "get")
  });
  var protocol_diagnostic_1 = uDe();
  Object.defineProperty(exports, "DiagnosticServerCancellationData", {
    enumerable: !0,
    get: __name(function () {
      return protocol_diagnostic_1.DiagnosticServerCancellationData;
    }, "get")
  });
  Object.defineProperty(exports, "DocumentDiagnosticReportKind", {
    enumerable: !0,
    get: __name(function () {
      return protocol_diagnostic_1.DocumentDiagnosticReportKind;
    }, "get")
  });
  Object.defineProperty(exports, "DocumentDiagnosticRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_diagnostic_1.DocumentDiagnosticRequest;
    }, "get")
  });
  Object.defineProperty(exports, "WorkspaceDiagnosticRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_diagnostic_1.WorkspaceDiagnosticRequest;
    }, "get")
  });
  Object.defineProperty(exports, "DiagnosticRefreshRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_diagnostic_1.DiagnosticRefreshRequest;
    }, "get")
  });
  var protocol_notebook_1 = bDe();
  Object.defineProperty(exports, "NotebookCellKind", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.NotebookCellKind;
    }, "get")
  });
  Object.defineProperty(exports, "ExecutionSummary", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.ExecutionSummary;
    }, "get")
  });
  Object.defineProperty(exports, "NotebookCell", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.NotebookCell;
    }, "get")
  });
  Object.defineProperty(exports, "NotebookDocument", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.NotebookDocument;
    }, "get")
  });
  Object.defineProperty(exports, "NotebookDocumentSyncRegistrationType", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.NotebookDocumentSyncRegistrationType;
    }, "get")
  });
  Object.defineProperty(exports, "DidOpenNotebookDocumentNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.DidOpenNotebookDocumentNotification;
    }, "get")
  });
  Object.defineProperty(exports, "NotebookCellArrayChange", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.NotebookCellArrayChange;
    }, "get")
  });
  Object.defineProperty(exports, "DidChangeNotebookDocumentNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.DidChangeNotebookDocumentNotification;
    }, "get")
  });
  Object.defineProperty(exports, "DidSaveNotebookDocumentNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.DidSaveNotebookDocumentNotification;
    }, "get")
  });
  Object.defineProperty(exports, "DidCloseNotebookDocumentNotification", {
    enumerable: !0,
    get: __name(function () {
      return protocol_notebook_1.DidCloseNotebookDocumentNotification;
    }, "get")
  });
  var protocol_inlineCompletion_1 = CDe();
  Object.defineProperty(exports, "InlineCompletionRequest", {
    enumerable: !0,
    get: __name(function () {
      return protocol_inlineCompletion_1.InlineCompletionRequest;
    }, "get")
  });
  var TextDocumentFilter;
  (function (TextDocumentFilter) {
    function is(value) {
      let candidate = value;
      return Is.string(candidate) || Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);
    }
    __name(is, "is"), TextDocumentFilter.is = is;
  })(TextDocumentFilter || (exports.TextDocumentFilter = TextDocumentFilter = {}));
  var NotebookDocumentFilter;
  (function (NotebookDocumentFilter) {
    function is(value) {
      let candidate = value;
      return Is.objectLiteral(candidate) && (Is.string(candidate.notebookType) || Is.string(candidate.scheme) || Is.string(candidate.pattern));
    }
    __name(is, "is"), NotebookDocumentFilter.is = is;
  })(NotebookDocumentFilter || (exports.NotebookDocumentFilter = NotebookDocumentFilter = {}));
  var NotebookCellTextDocumentFilter;
  (function (NotebookCellTextDocumentFilter) {
    function is(value) {
      let candidate = value;
      return Is.objectLiteral(candidate) && (Is.string(candidate.notebook) || NotebookDocumentFilter.is(candidate.notebook)) && (candidate.language === void 0 || Is.string(candidate.language));
    }
    __name(is, "is"), NotebookCellTextDocumentFilter.is = is;
  })(NotebookCellTextDocumentFilter || (exports.NotebookCellTextDocumentFilter = NotebookCellTextDocumentFilter = {}));
  var DocumentSelector;
  (function (DocumentSelector) {
    function is(value) {
      if (!Array.isArray(value)) return !1;
      for (let elem of value) if (!Is.string(elem) && !TextDocumentFilter.is(elem) && !NotebookCellTextDocumentFilter.is(elem)) return !1;
      return !0;
    }
    __name(is, "is"), DocumentSelector.is = is;
  })(DocumentSelector || (exports.DocumentSelector = DocumentSelector = {}));
  var RegistrationRequest;
  (function (RegistrationRequest) {
    RegistrationRequest.method = "client/registerCapability", RegistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient, RegistrationRequest.type = new messages_1.ProtocolRequestType(RegistrationRequest.method);
  })(RegistrationRequest || (exports.RegistrationRequest = RegistrationRequest = {}));
  var UnregistrationRequest;
  (function (UnregistrationRequest) {
    UnregistrationRequest.method = "client/unregisterCapability", UnregistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient, UnregistrationRequest.type = new messages_1.ProtocolRequestType(UnregistrationRequest.method);
  })(UnregistrationRequest || (exports.UnregistrationRequest = UnregistrationRequest = {}));
  var ResourceOperationKind;
  (function (ResourceOperationKind) {
    ResourceOperationKind.Create = "create", ResourceOperationKind.Rename = "rename", ResourceOperationKind.Delete = "delete";
  })(ResourceOperationKind || (exports.ResourceOperationKind = ResourceOperationKind = {}));
  var FailureHandlingKind;
  (function (FailureHandlingKind) {
    FailureHandlingKind.Abort = "abort", FailureHandlingKind.Transactional = "transactional", FailureHandlingKind.TextOnlyTransactional = "textOnlyTransactional", FailureHandlingKind.Undo = "undo";
  })(FailureHandlingKind || (exports.FailureHandlingKind = FailureHandlingKind = {}));
  var PositionEncodingKind;
  (function (PositionEncodingKind) {
    PositionEncodingKind.UTF8 = "utf-8", PositionEncodingKind.UTF16 = "utf-16", PositionEncodingKind.UTF32 = "utf-32";
  })(PositionEncodingKind || (exports.PositionEncodingKind = PositionEncodingKind = {}));
  var StaticRegistrationOptions;
  (function (StaticRegistrationOptions) {
    function hasId(value) {
      let candidate = value;
      return candidate && Is.string(candidate.id) && candidate.id.length > 0;
    }
    __name(hasId, "hasId"), StaticRegistrationOptions.hasId = hasId;
  })(StaticRegistrationOptions || (exports.StaticRegistrationOptions = StaticRegistrationOptions = {}));
  var TextDocumentRegistrationOptions;
  (function (TextDocumentRegistrationOptions) {
    function is(value) {
      let candidate = value;
      return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));
    }
    __name(is, "is"), TextDocumentRegistrationOptions.is = is;
  })(TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = TextDocumentRegistrationOptions = {}));
  var WorkDoneProgressOptions;
  (function (WorkDoneProgressOptions) {
    function is(value) {
      let candidate = value;
      return Is.objectLiteral(candidate) && (candidate.workDoneProgress === void 0 || Is.boolean(candidate.workDoneProgress));
    }
    __name(is, "is"), WorkDoneProgressOptions.is = is;
    function hasWorkDoneProgress(value) {
      let candidate = value;
      return candidate && Is.boolean(candidate.workDoneProgress);
    }
    __name(hasWorkDoneProgress, "hasWorkDoneProgress"), WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;
  })(WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = WorkDoneProgressOptions = {}));
  var InitializeRequest;
  (function (InitializeRequest) {
    InitializeRequest.method = "initialize", InitializeRequest.messageDirection = messages_1.MessageDirection.clientToServer, InitializeRequest.type = new messages_1.ProtocolRequestType(InitializeRequest.method);
  })(InitializeRequest || (exports.InitializeRequest = InitializeRequest = {}));
  var InitializeErrorCodes;
  (function (InitializeErrorCodes) {
    InitializeErrorCodes.unknownProtocolVersion = 1;
  })(InitializeErrorCodes || (exports.InitializeErrorCodes = InitializeErrorCodes = {}));
  var InitializedNotification;
  (function (InitializedNotification) {
    InitializedNotification.method = "initialized", InitializedNotification.messageDirection = messages_1.MessageDirection.clientToServer, InitializedNotification.type = new messages_1.ProtocolNotificationType(InitializedNotification.method);
  })(InitializedNotification || (exports.InitializedNotification = InitializedNotification = {}));
  var ShutdownRequest;
  (function (ShutdownRequest) {
    ShutdownRequest.method = "shutdown", ShutdownRequest.messageDirection = messages_1.MessageDirection.clientToServer, ShutdownRequest.type = new messages_1.ProtocolRequestType0(ShutdownRequest.method);
  })(ShutdownRequest || (exports.ShutdownRequest = ShutdownRequest = {}));
  var ExitNotification;
  (function (ExitNotification) {
    ExitNotification.method = "exit", ExitNotification.messageDirection = messages_1.MessageDirection.clientToServer, ExitNotification.type = new messages_1.ProtocolNotificationType0(ExitNotification.method);
  })(ExitNotification || (exports.ExitNotification = ExitNotification = {}));
  var DidChangeConfigurationNotification;
  (function (DidChangeConfigurationNotification) {
    DidChangeConfigurationNotification.method = "workspace/didChangeConfiguration", DidChangeConfigurationNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType(DidChangeConfigurationNotification.method);
  })(DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = DidChangeConfigurationNotification = {}));
  var MessageType;
  (function (MessageType) {
    MessageType.Error = 1, MessageType.Warning = 2, MessageType.Info = 3, MessageType.Log = 4, MessageType.Debug = 5;
  })(MessageType || (exports.MessageType = MessageType = {}));
  var ShowMessageNotification;
  (function (ShowMessageNotification) {
    ShowMessageNotification.method = "window/showMessage", ShowMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient, ShowMessageNotification.type = new messages_1.ProtocolNotificationType(ShowMessageNotification.method);
  })(ShowMessageNotification || (exports.ShowMessageNotification = ShowMessageNotification = {}));
  var ShowMessageRequest;
  (function (ShowMessageRequest) {
    ShowMessageRequest.method = "window/showMessageRequest", ShowMessageRequest.messageDirection = messages_1.MessageDirection.serverToClient, ShowMessageRequest.type = new messages_1.ProtocolRequestType(ShowMessageRequest.method);
  })(ShowMessageRequest || (exports.ShowMessageRequest = ShowMessageRequest = {}));
  var LogMessageNotification;
  (function (LogMessageNotification) {
    LogMessageNotification.method = "window/logMessage", LogMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient, LogMessageNotification.type = new messages_1.ProtocolNotificationType(LogMessageNotification.method);
  })(LogMessageNotification || (exports.LogMessageNotification = LogMessageNotification = {}));
  var TelemetryEventNotification;
  (function (TelemetryEventNotification) {
    TelemetryEventNotification.method = "telemetry/event", TelemetryEventNotification.messageDirection = messages_1.MessageDirection.serverToClient, TelemetryEventNotification.type = new messages_1.ProtocolNotificationType(TelemetryEventNotification.method);
  })(TelemetryEventNotification || (exports.TelemetryEventNotification = TelemetryEventNotification = {}));
  var TextDocumentSyncKind;
  (function (TextDocumentSyncKind) {
    TextDocumentSyncKind.None = 0, TextDocumentSyncKind.Full = 1, TextDocumentSyncKind.Incremental = 2;
  })(TextDocumentSyncKind || (exports.TextDocumentSyncKind = TextDocumentSyncKind = {}));
  var DidOpenTextDocumentNotification;
  (function (DidOpenTextDocumentNotification) {
    DidOpenTextDocumentNotification.method = "textDocument/didOpen", DidOpenTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);
  })(DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = DidOpenTextDocumentNotification = {}));
  var TextDocumentContentChangeEvent;
  (function (TextDocumentContentChangeEvent) {
    function isIncremental(event) {
      let candidate = event;
      return candidate != null && typeof candidate.text == "string" && candidate.range !== void 0 && (candidate.rangeLength === void 0 || typeof candidate.rangeLength == "number");
    }
    __name(isIncremental, "isIncremental"), TextDocumentContentChangeEvent.isIncremental = isIncremental;
    function isFull(event) {
      let candidate = event;
      return candidate != null && typeof candidate.text == "string" && candidate.range === void 0 && candidate.rangeLength === void 0;
    }
    __name(isFull, "isFull"), TextDocumentContentChangeEvent.isFull = isFull;
  })(TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = TextDocumentContentChangeEvent = {}));
  var DidChangeTextDocumentNotification;
  (function (DidChangeTextDocumentNotification) {
    DidChangeTextDocumentNotification.method = "textDocument/didChange", DidChangeTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);
  })(DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = DidChangeTextDocumentNotification = {}));
  var DidCloseTextDocumentNotification;
  (function (DidCloseTextDocumentNotification) {
    DidCloseTextDocumentNotification.method = "textDocument/didClose", DidCloseTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);
  })(DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = DidCloseTextDocumentNotification = {}));
  var DidSaveTextDocumentNotification;
  (function (DidSaveTextDocumentNotification) {
    DidSaveTextDocumentNotification.method = "textDocument/didSave", DidSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);
  })(DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = DidSaveTextDocumentNotification = {}));
  var TextDocumentSaveReason;
  (function (TextDocumentSaveReason) {
    TextDocumentSaveReason.Manual = 1, TextDocumentSaveReason.AfterDelay = 2, TextDocumentSaveReason.FocusOut = 3;
  })(TextDocumentSaveReason || (exports.TextDocumentSaveReason = TextDocumentSaveReason = {}));
  var WillSaveTextDocumentNotification;
  (function (WillSaveTextDocumentNotification) {
    WillSaveTextDocumentNotification.method = "textDocument/willSave", WillSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer, WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);
  })(WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = WillSaveTextDocumentNotification = {}));
  var WillSaveTextDocumentWaitUntilRequest;
  (function (WillSaveTextDocumentWaitUntilRequest) {
    WillSaveTextDocumentWaitUntilRequest.method = "textDocument/willSaveWaitUntil", WillSaveTextDocumentWaitUntilRequest.messageDirection = messages_1.MessageDirection.clientToServer, WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);
  })(WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = WillSaveTextDocumentWaitUntilRequest = {}));
  var DidChangeWatchedFilesNotification;
  (function (DidChangeWatchedFilesNotification) {
    DidChangeWatchedFilesNotification.method = "workspace/didChangeWatchedFiles", DidChangeWatchedFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer, DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType(DidChangeWatchedFilesNotification.method);
  })(DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = DidChangeWatchedFilesNotification = {}));
  var FileChangeType;
  (function (FileChangeType) {
    FileChangeType.Created = 1, FileChangeType.Changed = 2, FileChangeType.Deleted = 3;
  })(FileChangeType || (exports.FileChangeType = FileChangeType = {}));
  var RelativePattern;
  (function (RelativePattern) {
    function is(value) {
      let candidate = value;
      return Is.objectLiteral(candidate) && (vscode_languageserver_types_1.URI.is(candidate.baseUri) || vscode_languageserver_types_1.WorkspaceFolder.is(candidate.baseUri)) && Is.string(candidate.pattern);
    }
    __name(is, "is"), RelativePattern.is = is;
  })(RelativePattern || (exports.RelativePattern = RelativePattern = {}));
  var WatchKind;
  (function (WatchKind) {
    WatchKind.Create = 1, WatchKind.Change = 2, WatchKind.Delete = 4;
  })(WatchKind || (exports.WatchKind = WatchKind = {}));
  var PublishDiagnosticsNotification;
  (function (PublishDiagnosticsNotification) {
    PublishDiagnosticsNotification.method = "textDocument/publishDiagnostics", PublishDiagnosticsNotification.messageDirection = messages_1.MessageDirection.serverToClient, PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType(PublishDiagnosticsNotification.method);
  })(PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = PublishDiagnosticsNotification = {}));
  var CompletionTriggerKind;
  (function (CompletionTriggerKind) {
    CompletionTriggerKind.Invoked = 1, CompletionTriggerKind.TriggerCharacter = 2, CompletionTriggerKind.TriggerForIncompleteCompletions = 3;
  })(CompletionTriggerKind || (exports.CompletionTriggerKind = CompletionTriggerKind = {}));
  var CompletionRequest;
  (function (CompletionRequest) {
    CompletionRequest.method = "textDocument/completion", CompletionRequest.messageDirection = messages_1.MessageDirection.clientToServer, CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);
  })(CompletionRequest || (exports.CompletionRequest = CompletionRequest = {}));
  var CompletionResolveRequest;
  (function (CompletionResolveRequest) {
    CompletionResolveRequest.method = "completionItem/resolve", CompletionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer, CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);
  })(CompletionResolveRequest || (exports.CompletionResolveRequest = CompletionResolveRequest = {}));
  var HoverRequest;
  (function (HoverRequest) {
    HoverRequest.method = "textDocument/hover", HoverRequest.messageDirection = messages_1.MessageDirection.clientToServer, HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);
  })(HoverRequest || (exports.HoverRequest = HoverRequest = {}));
  var SignatureHelpTriggerKind;
  (function (SignatureHelpTriggerKind) {
    SignatureHelpTriggerKind.Invoked = 1, SignatureHelpTriggerKind.TriggerCharacter = 2, SignatureHelpTriggerKind.ContentChange = 3;
  })(SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = SignatureHelpTriggerKind = {}));
  var SignatureHelpRequest;
  (function (SignatureHelpRequest) {
    SignatureHelpRequest.method = "textDocument/signatureHelp", SignatureHelpRequest.messageDirection = messages_1.MessageDirection.clientToServer, SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);
  })(SignatureHelpRequest || (exports.SignatureHelpRequest = SignatureHelpRequest = {}));
  var DefinitionRequest;
  (function (DefinitionRequest) {
    DefinitionRequest.method = "textDocument/definition", DefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer, DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);
  })(DefinitionRequest || (exports.DefinitionRequest = DefinitionRequest = {}));
  var ReferencesRequest;
  (function (ReferencesRequest) {
    ReferencesRequest.method = "textDocument/references", ReferencesRequest.messageDirection = messages_1.MessageDirection.clientToServer, ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);
  })(ReferencesRequest || (exports.ReferencesRequest = ReferencesRequest = {}));
  var DocumentHighlightRequest;
  (function (DocumentHighlightRequest) {
    DocumentHighlightRequest.method = "textDocument/documentHighlight", DocumentHighlightRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);
  })(DocumentHighlightRequest || (exports.DocumentHighlightRequest = DocumentHighlightRequest = {}));
  var DocumentSymbolRequest;
  (function (DocumentSymbolRequest) {
    DocumentSymbolRequest.method = "textDocument/documentSymbol", DocumentSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);
  })(DocumentSymbolRequest || (exports.DocumentSymbolRequest = DocumentSymbolRequest = {}));
  var CodeActionRequest;
  (function (CodeActionRequest) {
    CodeActionRequest.method = "textDocument/codeAction", CodeActionRequest.messageDirection = messages_1.MessageDirection.clientToServer, CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);
  })(CodeActionRequest || (exports.CodeActionRequest = CodeActionRequest = {}));
  var CodeActionResolveRequest;
  (function (CodeActionResolveRequest) {
    CodeActionResolveRequest.method = "codeAction/resolve", CodeActionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer, CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);
  })(CodeActionResolveRequest || (exports.CodeActionResolveRequest = CodeActionResolveRequest = {}));
  var WorkspaceSymbolRequest;
  (function (WorkspaceSymbolRequest) {
    WorkspaceSymbolRequest.method = "workspace/symbol", WorkspaceSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer, WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);
  })(WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = WorkspaceSymbolRequest = {}));
  var WorkspaceSymbolResolveRequest;
  (function (WorkspaceSymbolResolveRequest) {
    WorkspaceSymbolResolveRequest.method = "workspaceSymbol/resolve", WorkspaceSymbolResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer, WorkspaceSymbolResolveRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolResolveRequest.method);
  })(WorkspaceSymbolResolveRequest || (exports.WorkspaceSymbolResolveRequest = WorkspaceSymbolResolveRequest = {}));
  var CodeLensRequest;
  (function (CodeLensRequest) {
    CodeLensRequest.method = "textDocument/codeLens", CodeLensRequest.messageDirection = messages_1.MessageDirection.clientToServer, CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);
  })(CodeLensRequest || (exports.CodeLensRequest = CodeLensRequest = {}));
  var CodeLensResolveRequest;
  (function (CodeLensResolveRequest) {
    CodeLensResolveRequest.method = "codeLens/resolve", CodeLensResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer, CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);
  })(CodeLensResolveRequest || (exports.CodeLensResolveRequest = CodeLensResolveRequest = {}));
  var CodeLensRefreshRequest;
  (function (CodeLensRefreshRequest) {
    CodeLensRefreshRequest.method = "workspace/codeLens/refresh", CodeLensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient, CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);
  })(CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = CodeLensRefreshRequest = {}));
  var DocumentLinkRequest;
  (function (DocumentLinkRequest) {
    DocumentLinkRequest.method = "textDocument/documentLink", DocumentLinkRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);
  })(DocumentLinkRequest || (exports.DocumentLinkRequest = DocumentLinkRequest = {}));
  var DocumentLinkResolveRequest;
  (function (DocumentLinkResolveRequest) {
    DocumentLinkResolveRequest.method = "documentLink/resolve", DocumentLinkResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);
  })(DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = DocumentLinkResolveRequest = {}));
  var DocumentFormattingRequest;
  (function (DocumentFormattingRequest) {
    DocumentFormattingRequest.method = "textDocument/formatting", DocumentFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);
  })(DocumentFormattingRequest || (exports.DocumentFormattingRequest = DocumentFormattingRequest = {}));
  var DocumentRangeFormattingRequest;
  (function (DocumentRangeFormattingRequest) {
    DocumentRangeFormattingRequest.method = "textDocument/rangeFormatting", DocumentRangeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);
  })(DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = DocumentRangeFormattingRequest = {}));
  var DocumentRangesFormattingRequest;
  (function (DocumentRangesFormattingRequest) {
    DocumentRangesFormattingRequest.method = "textDocument/rangesFormatting", DocumentRangesFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentRangesFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangesFormattingRequest.method);
  })(DocumentRangesFormattingRequest || (exports.DocumentRangesFormattingRequest = DocumentRangesFormattingRequest = {}));
  var DocumentOnTypeFormattingRequest;
  (function (DocumentOnTypeFormattingRequest) {
    DocumentOnTypeFormattingRequest.method = "textDocument/onTypeFormatting", DocumentOnTypeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer, DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);
  })(DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = DocumentOnTypeFormattingRequest = {}));
  var PrepareSupportDefaultBehavior;
  (function (PrepareSupportDefaultBehavior) {
    PrepareSupportDefaultBehavior.Identifier = 1;
  })(PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = PrepareSupportDefaultBehavior = {}));
  var RenameRequest;
  (function (RenameRequest) {
    RenameRequest.method = "textDocument/rename", RenameRequest.messageDirection = messages_1.MessageDirection.clientToServer, RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);
  })(RenameRequest || (exports.RenameRequest = RenameRequest = {}));
  var PrepareRenameRequest;
  (function (PrepareRenameRequest) {
    PrepareRenameRequest.method = "textDocument/prepareRename", PrepareRenameRequest.messageDirection = messages_1.MessageDirection.clientToServer, PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);
  })(PrepareRenameRequest || (exports.PrepareRenameRequest = PrepareRenameRequest = {}));
  var ExecuteCommandRequest;
  (function (ExecuteCommandRequest) {
    ExecuteCommandRequest.method = "workspace/executeCommand", ExecuteCommandRequest.messageDirection = messages_1.MessageDirection.clientToServer, ExecuteCommandRequest.type = new messages_1.ProtocolRequestType(ExecuteCommandRequest.method);
  })(ExecuteCommandRequest || (exports.ExecuteCommandRequest = ExecuteCommandRequest = {}));
  var ApplyWorkspaceEditRequest;
  (function (ApplyWorkspaceEditRequest) {
    ApplyWorkspaceEditRequest.method = "workspace/applyEdit", ApplyWorkspaceEditRequest.messageDirection = messages_1.MessageDirection.serverToClient, ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType("workspace/applyEdit");
  })(ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = ApplyWorkspaceEditRequest = {}));
});