var require_kerberos = __commonJSMin((exports, module) => {
  "use strict";

  var kerberos = Lze()("kerberos"),
    KerberosClient = kerberos.KerberosClient,
    KerberosServer = kerberos.KerberosServer,
    defineOperation = zze().defineOperation,
    GSS_C_DELEG_FLAG = 1,
    GSS_C_MUTUAL_FLAG = 2,
    GSS_C_REPLAY_FLAG = 4,
    GSS_C_SEQUENCE_FLAG = 8,
    GSS_C_CONF_FLAG = 16,
    GSS_C_INTEG_FLAG = 32,
    GSS_C_ANON_FLAG = 64,
    GSS_C_PROT_READY_FLAG = 128,
    GSS_C_TRANS_FLAG = 256,
    GSS_C_NO_OID = 0,
    GSS_MECH_OID_KRB5 = 9,
    GSS_MECH_OID_SPNEGO = 6;
  KerberosClient.prototype.step = defineOperation(KerberosClient.prototype.step, [{
    name: "challenge",
    type: "string"
  }, {
    name: "callback",
    type: "function",
    required: !1
  }]);
  KerberosClient.prototype.wrap = defineOperation(KerberosClient.prototype.wrap, [{
    name: "challenge",
    type: "string"
  }, {
    name: "options",
    type: "object"
  }, {
    name: "callback",
    type: "function",
    required: !1
  }]);
  KerberosClient.prototype.unwrap = defineOperation(KerberosClient.prototype.unwrap, [{
    name: "challenge",
    type: "string"
  }, {
    name: "callback",
    type: "function",
    required: !1
  }]);
  KerberosServer.prototype.step = defineOperation(KerberosServer.prototype.step, [{
    name: "challenge",
    type: "string"
  }, {
    name: "callback",
    type: "function",
    required: !1
  }]);
  var checkPassword = defineOperation(kerberos.checkPassword, [{
      name: "username",
      type: "string"
    }, {
      name: "password",
      type: "string"
    }, {
      name: "service",
      type: "string"
    }, {
      name: "defaultRealm",
      type: "string",
      required: !1
    }, {
      name: "callback",
      type: "function",
      required: !1
    }]),
    principalDetails = defineOperation(kerberos.principalDetails, [{
      name: "service",
      type: "string"
    }, {
      name: "hostname",
      type: "string"
    }, {
      name: "callback",
      type: "function",
      required: !1
    }]),
    initializeClient = defineOperation(kerberos.initializeClient, [{
      name: "service",
      type: "string"
    }, {
      name: "options",
      type: "object",
      default: {
        mechOID: GSS_C_NO_OID
      }
    }, {
      name: "callback",
      type: "function",
      required: !1
    }]),
    initializeServer = defineOperation(kerberos.initializeServer, [{
      name: "service",
      type: "string"
    }, {
      name: "callback",
      type: "function",
      required: !1
    }]);
  module.exports = {
    initializeClient: initializeClient,
    initializeServer: initializeServer,
    principalDetails: principalDetails,
    checkPassword: checkPassword,
    GSS_C_DELEG_FLAG: GSS_C_DELEG_FLAG,
    GSS_C_MUTUAL_FLAG: GSS_C_MUTUAL_FLAG,
    GSS_C_REPLAY_FLAG: GSS_C_REPLAY_FLAG,
    GSS_C_SEQUENCE_FLAG: GSS_C_SEQUENCE_FLAG,
    GSS_C_CONF_FLAG: GSS_C_CONF_FLAG,
    GSS_C_INTEG_FLAG: GSS_C_INTEG_FLAG,
    GSS_C_ANON_FLAG: GSS_C_ANON_FLAG,
    GSS_C_PROT_READY_FLAG: GSS_C_PROT_READY_FLAG,
    GSS_C_TRANS_FLAG: GSS_C_TRANS_FLAG,
    GSS_C_NO_OID: GSS_C_NO_OID,
    GSS_MECH_OID_KRB5: GSS_MECH_OID_KRB5,
    GSS_MECH_OID_SPNEGO: GSS_MECH_OID_SPNEGO
  };
});