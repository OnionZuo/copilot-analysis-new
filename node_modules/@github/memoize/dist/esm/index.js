function defaultHash(...args) {
  return JSON.stringify(args, (_, v) => typeof v == "object" ? v : String(v));
},__name(defaultHash, "defaultHash");,function memoize(fn, opts = {}) {
  let {
    hash = defaultHash,
    cache = new Map()
  } = opts;
  return function (...args) {
    let id = hash.apply(this, args);
    if (cache.has(id)) return cache.get(id);
    let result = fn.apply(this, args);
    return result instanceof Promise && (result = result.catch(error => {
      throw cache.delete(id), error;
    })), cache.set(id, result), result;
  };
},__name(memoize, "memoize");