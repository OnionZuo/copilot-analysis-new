var require_progress = __commonJSMin(exports => {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: !0
  });
  exports.ProgressFeature = void 0;
  var vscode_languageserver_protocol_1 = Un(),
    progressPart_1 = ede();
  function ensure(target, key) {
    return target[key] === void 0 && (target[key] = Object.create(null)), target[key];
  }
  __name(ensure, "ensure");
  var _ProgressFeature = class _ProgressFeature {
    constructor(_client) {
      this._client = _client, this.activeParts = new Set();
    }
    getState() {
      return {
        kind: "window",
        id: vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.method,
        registrations: this.activeParts.size > 0
      };
    }
    fillClientCapabilities(capabilities) {
      ensure(capabilities, "window").workDoneProgress = !0;
    }
    initialize() {
      let client = this._client,
        deleteHandler = __name(part => {
          this.activeParts.delete(part);
        }, "deleteHandler"),
        createHandler = __name(params => {
          this.activeParts.add(new progressPart_1.ProgressPart(this._client, params.token, deleteHandler));
        }, "createHandler");
      client.onRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, createHandler);
    }
    clear() {
      for (let part of this.activeParts) part.done();
      this.activeParts.clear();
    }
  };
  __name(_ProgressFeature, "ProgressFeature");
  var ProgressFeature = _ProgressFeature;
  exports.ProgressFeature = ProgressFeature;
});