var require_decorator_handler = __commonJSMin((exports, module) => {
  "use strict";

  var _handler, _a;
  module.exports = (_a = class {
    constructor(handler) {
      __privateAdd(this, _handler);
      if (typeof handler != "object" || handler === null) throw new TypeError("handler must be an object");
      __privateSet(this, _handler, handler);
    }
    onConnect(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onConnect) == null ? void 0 : _b.call(_a, ...args);
    }
    onError(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onError) == null ? void 0 : _b.call(_a, ...args);
    }
    onUpgrade(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onUpgrade) == null ? void 0 : _b.call(_a, ...args);
    }
    onResponseStarted(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onResponseStarted) == null ? void 0 : _b.call(_a, ...args);
    }
    onHeaders(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onHeaders) == null ? void 0 : _b.call(_a, ...args);
    }
    onData(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onData) == null ? void 0 : _b.call(_a, ...args);
    }
    onComplete(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onComplete) == null ? void 0 : _b.call(_a, ...args);
    }
    onBodySent(...args) {
      var _a, _b;
      return (_b = (_a = __privateGet(this, _handler)).onBodySent) == null ? void 0 : _b.call(_a, ...args);
    }
  }, _handler = new WeakMap(), __name(_a, "DecoratorHandler"), _a);
});