var require_pending_interceptors_formatter = __commonJSMin((exports, module) => {
  "use strict";

  var {
      Transform: Transform
    } = require("stream"),
    {
      Console: Console
    } = require("console"),
    PERSISTENT = process.versions.icu ? "\u2705" : "Y ",
    NOT_PERSISTENT = process.versions.icu ? "\u274C" : "N ",
    _a;
  module.exports = (_a = class {
    constructor({
      disableColors: disableColors
    } = {}) {
      this.transform = new Transform({
        transform(chunk, _enc, cb) {
          cb(null, chunk);
        }
      }), this.logger = new Console({
        stdout: this.transform,
        inspectOptions: {
          colors: !disableColors && !process.env.CI
        }
      });
    }
    format(pendingInterceptors) {
      let withPrettyHeaders = pendingInterceptors.map(({
        method: method,
        path: path,
        data: {
          statusCode: statusCode
        },
        persist: persist,
        times: times,
        timesInvoked: timesInvoked,
        origin: origin
      }) => ({
        Method: method,
        Origin: origin,
        Path: path,
        "Status code": statusCode,
        Persistent: persist ? PERSISTENT : NOT_PERSISTENT,
        Invocations: timesInvoked,
        Remaining: persist ? 1 / 0 : times - timesInvoked
      }));
      return this.logger.table(withPrettyHeaders), this.transform.read().toString();
    }
  }, __name(_a, "PendingInterceptorsFormatter"), _a);
});