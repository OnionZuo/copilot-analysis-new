var require_mode_ctr = __commonJSMin((exports, module) => {
  (function (root, factory, undef) {
    typeof exports == "object" ? module.exports = exports = factory(wi(), Ps()) : typeof define == "function" && define.amd ? define(["./core", "./cipher-core"], factory) : factory(root.CryptoJS);
  })(exports, function (CryptoJS) {
    return CryptoJS.mode.CTR = function () {
      var CTR = CryptoJS.lib.BlockCipherMode.extend(),
        Encryptor = CTR.Encryptor = CTR.extend({
          processBlock: __name(function (words, offset) {
            var cipher = this._cipher,
              blockSize = cipher.blockSize,
              iv = this._iv,
              counter = this._counter;
            iv && (counter = this._counter = iv.slice(0), this._iv = void 0);
            var keystream = counter.slice(0);
            cipher.encryptBlock(keystream, 0), counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;
            for (var i = 0; i < blockSize; i++) words[offset + i] ^= keystream[i];
          }, "processBlock")
        });
      return CTR.Decryptor = Encryptor, CTR;
    }(), CryptoJS.mode.CTR;
  });
});