var require_mode_ofb = __commonJSMin((exports, module) => {
  (function (root, factory, undef) {
    typeof exports == "object" ? module.exports = exports = factory(wi(), Ps()) : typeof define == "function" && define.amd ? define(["./core", "./cipher-core"], factory) : factory(root.CryptoJS);
  })(exports, function (CryptoJS) {
    return CryptoJS.mode.OFB = function () {
      var OFB = CryptoJS.lib.BlockCipherMode.extend(),
        Encryptor = OFB.Encryptor = OFB.extend({
          processBlock: __name(function (words, offset) {
            var cipher = this._cipher,
              blockSize = cipher.blockSize,
              iv = this._iv,
              keystream = this._keystream;
            iv && (keystream = this._keystream = iv.slice(0), this._iv = void 0), cipher.encryptBlock(keystream, 0);
            for (var i = 0; i < blockSize; i++) words[offset + i] ^= keystream[i];
          }, "processBlock")
        });
      return OFB.Decryptor = Encryptor, OFB;
    }(), CryptoJS.mode.OFB;
  });
});