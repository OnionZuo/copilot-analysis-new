var require_sha384 = __commonJSMin((exports, module) => {
  (function (root, factory, undef) {
    typeof exports == "object" ? module.exports = exports = factory(wi(), UD(), AZ()) : typeof define == "function" && define.amd ? define(["./core", "./x64-core", "./sha512"], factory) : factory(root.CryptoJS);
  })(exports, function (CryptoJS) {
    return function () {
      var C = CryptoJS,
        C_x64 = C.x64,
        X64Word = C_x64.Word,
        X64WordArray = C_x64.WordArray,
        C_algo = C.algo,
        SHA512 = C_algo.SHA512,
        SHA384 = C_algo.SHA384 = SHA512.extend({
          _doReset: __name(function () {
            this._hash = new X64WordArray.init([new X64Word.init(3418070365, 3238371032), new X64Word.init(1654270250, 914150663), new X64Word.init(2438529370, 812702999), new X64Word.init(355462360, 4144912697), new X64Word.init(1731405415, 4290775857), new X64Word.init(2394180231, 1750603025), new X64Word.init(3675008525, 1694076839), new X64Word.init(1203062813, 3204075428)]);
          }, "_doReset"),
          _doFinalize: __name(function () {
            var hash = SHA512._doFinalize.call(this);
            return hash.sigBytes -= 16, hash;
          }, "_doFinalize")
        });
      C.SHA384 = SHA512._createHelper(SHA384), C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
    }(), CryptoJS.SHA384;
  });
});